diff -r '--exclude=*.csproj' '--exclude=*.sln' bak/Assembly-CSharp/MiDisplayDiagnostics.cs gamesrc/Assembly-CSharp/MiDisplayDiagnostics.cs
126a127
> 		this.modUpdate();
221a223,230
> 		}
> 	}
> 
> 	void modUpdate()
> 	{
> 		if (Input.GetKey(KeyCode.LeftControl) && Input.GetKeyDown(KeyCode.Alpha0))
> 		{
> 			MiAudioMixer.s_bMutePlayerVoice = true;
diff -r '--exclude=*.csproj' '--exclude=*.sln' bak/Assembly-CSharp/MiFreeCam.cs gamesrc/Assembly-CSharp/MiFreeCam.cs
57a58
> 				return;
63c64
< 			Cursor.visible = this.m_bCursorWasVisible;
---
> 			Cursor.visible = true;
131a133,136
> 		if (MiTime.sPaused)
> 		{
> 			return;
> 		}
216a222
> 			this.modUpdate();
350c356
< 		if (this.bShowSettings)
---
> 		checked
352,356c358
< 			GUIStyle guistyle = new GUIStyle(GUI.skin.GetStyle("TextArea"));
< 			guistyle.normal.textColor = ((!MiFreeCam.s_bOn) ? Color.red : Color.green);
< 			GUILayout.Space(40f);
< 			GUILayout.BeginVertical(new GUILayoutOption[0]);
< 			GUILayout.TextArea(string.Concat(new object[]
---
> 			if (this.bShowSettings)
358,367c360,364
< 				"Free Cam Active ",
< 				MiFreeCam.s_bOn,
< 				" locked: ",
< 				!this.m_bMoveCam
< 			}), guistyle, new GUILayoutOption[0]);
< 			string text = string.Empty;
< 			for (int i = 0; i < MiFreeCam.m_arSettings.Length; i++)
< 			{
< 				string text2 = ((MiFreeCam.EnumSetting)i).ToString() + ": " + MiFreeCam.m_arSettings[i].strValue();
< 				if (i != 0)
---
> 				GUIStyle guistyle = new GUIStyle(GUI.skin.GetStyle("TextArea"));
> 				guistyle.normal.textColor = ((!MiFreeCam.s_bOn) ? Color.red : Color.green);
> 				GUILayout.Space(40f);
> 				GUILayout.BeginVertical(new GUILayoutOption[0]);
> 				GUILayout.TextArea(string.Concat(new object[]
369,371c366,372
< 					text += "\n";
< 				}
< 				if (i == (int)this.m_eSetting)
---
> 					"Free Cam Active ",
> 					MiFreeCam.s_bOn,
> 					" locked: ",
> 					!this.m_bMoveCam
> 				}), guistyle, new GUILayoutOption[0]);
> 				string text = string.Empty;
> 				for (int i = 0; i < MiFreeCam.m_arSettings.Length; i++)
373c374,387
< 					text = text + "---> " + text2;
---
> 					MiFreeCam.EnumSetting enumSetting = (MiFreeCam.EnumSetting)i;
> 					string text2 = enumSetting.ToString() + ": " + MiFreeCam.m_arSettings[i].strValue();
> 					if (i != 0)
> 					{
> 						text += "\n";
> 					}
> 					if (i == (int)this.m_eSetting)
> 					{
> 						text = text + "---> " + text2;
> 					}
> 					else
> 					{
> 						text += text2;
> 					}
375c389,394
< 				else
---
> 				GUILayout.TextArea("Camera Settings:", new GUILayoutOption[0]);
> 				GUILayout.TextArea(text, new GUILayoutOption[0]);
> 				GUILayout.TextArea("shadow-warrior-debug Controls:", new GUILayoutOption[0]);
> 				GUILayout.EndVertical();
> 				GUILayout.BeginHorizontal(new GUILayoutOption[0]);
> 				GUILayout.TextArea(string.Concat(new object[]
377,378c396,449
< 					text += text2;
< 				}
---
> 					"FOV: ",
> 					this.m_cam.fieldOfView,
> 					"\nReset Position: ",
> 					"\nLock Camera: ",
> 					!this.m_bMoveCam,
> 					"\nHide debug UI: ",
> 					"\nHide game UI: ",
> 					"\nControl time speed: ",
> 					"\nDisable character voices: ",
> 					"\nMove: ",
> 					"\nFaster camera/fov change: "
> 				}), new GUILayoutOption[0]);
> 				GUILayout.TextArea(string.Concat(new object[]
> 				{
> 					"Keypad1/3",
> 					"\n0",
> 					"\nKeypad \\",
> 					"\nInsert",
> 					"\n,",
> 					"\nControl+[1 to 5]",
> 					"\nControl + 0",
> 					"\nKeypad 8456",
> 					"\nShift"
> 				}), new GUILayoutOption[0]);
> 				GUILayout.EndHorizontal();
> 				GUILayout.BeginVertical(new GUILayoutOption[0]);
> 				GUILayout.TextArea("Cheats: (choose target with left click)", new GUILayoutOption[0]);
> 				GUILayout.EndVertical();
> 				GUILayout.BeginHorizontal(new GUILayoutOption[0]);
> 				GUILayout.TextArea(string.Concat(new object[]
> 				{
> 					"Indetectability - PageUp/PageDown",
> 					"\nInvincibility - Home/End"
> 				}), new GUILayoutOption[0]);
> 				GUILayout.TextArea(string.Concat(new object[]
> 				{
> 					"PageUp/PageDown",
> 					"\nHome/End"
> 				}), new GUILayoutOption[0]);
> 				GUILayout.EndHorizontal();
> 				GUILayout.BeginHorizontal(new GUILayoutOption[0]);
> 				GUILayout.TextArea(string.Concat(new object[]
> 				{
> 					"Camera settings control",
> 					"\nMove cursor up/down",
> 					"\nIncrease/Decrease"
> 				}), new GUILayoutOption[0]);
> 				GUILayout.TextArea(string.Concat(new object[]
> 				{
> 					"(needs Numpad0 active)",
> 					"\nPageUp/PageDown",
> 					"\nHome/End"
> 				}), new GUILayoutOption[0]);
> 				GUILayout.EndHorizontal();
380,394c451,469
< 			GUILayout.TextArea(text, new GUILayoutOption[0]);
< 			GUILayout.EndVertical();
< 			string text3 = string.Concat(new object[]
< 			{
< 				"FOV: ",
< 				this.m_cam.fieldOfView,
< 				"\nReset Position: \nMove Back: \nNext Frame: \nLock Camera: ",
< 				!this.m_bMoveCam,
< 				"\nHide this UI: "
< 			});
< 			GUILayout.BeginHorizontal(new GUILayoutOption[0]);
< 			GUILayout.TextArea(text3, new GUILayoutOption[0]);
< 			string text4 = "Keypad1 / Keypad3\n0\n9\nKeypadPlus\nKeypad ,\nInsert";
< 			GUILayout.TextArea(text4, new GUILayoutOption[0]);
< 			GUILayout.EndHorizontal();
---
> 		}
> 	}
> 
> 	void modUpdate()
> 	{
> 		if (Input.GetKey(KeyCode.LeftControl) && Input.GetKeyDown(KeyCode.Quote))
> 		{
> 			this.m_cam.fov = 40f;
> 			MiFreeCam.m_fov = 40f;
> 		}
> 		if (MiFreeCam.bOn)
> 		{
> 			Cursor.visible = false;
> 			return;
> 		}
> 		Cursor.visible = true;
> 		if (Input.GetKey(KeyCode.Alpha0))
> 		{
> 			this.setToBirdViewCamPos();
560c635
< 	static float m_fSpeedCurrent = 3f;
---
> 	static float m_fSpeedCurrent = 15f;
618,619d692
< 		new MiFreeCam.SettingFreeCamFloat(6f),
< 		new MiFreeCam.SettingFreeCamFloat(0.3f, 0.1f),
620a694,695
> 		new MiFreeCam.SettingFreeCamFloat(0.3f, 0.1f),
> 		new MiFreeCam.SettingFreeCamFloat(68f),
622,624c697,699
< 		new MiFreeCam.SettingFreeCamBool(true),
< 		new MiFreeCam.SettingFreeCamFloat(0f, 10f),
< 		new MiFreeCam.SettingFreeCamBool(true),
---
> 		new MiFreeCam.SettingFreeCamBool(false),
> 		new MiFreeCam.SettingFreeCamFloat(0f, 0f),
> 		new MiFreeCam.SettingFreeCamBool(false),
631c706
< 		new MiFreeCam.SettingFreeCamFloat(1f, 1f)
---
> 		new MiFreeCam.SettingFreeCamFloat(7f, 7f)
diff -r '--exclude=*.csproj' '--exclude=*.sln' bak/Assembly-CSharp/MiMouse.cs gamesrc/Assembly-CSharp/MiMouse.cs
228a229,233
> 		if (MiFreeCam.bOn)
> 		{
> 			Cursor.visible = false;
> 			return;
> 		}
diff -r '--exclude=*.csproj' '--exclude=*.sln' bak/Assembly-CSharp/MiTime.cs gamesrc/Assembly-CSharp/MiTime.cs
418c418
< 		if (MiTime.s_bFrozen || MiTime.s_bPaused)
---
> 		if (MiTime.s_bFrozen || MiTime.s_bPaused || MiDisplayDiagnostics.bOn)
422c422
< 		if (Input.GetKeyDown(KeyCode.Keypad1))
---
> 		if (Input.GetKey(KeyCode.LeftControl) && Input.GetKeyDown(KeyCode.Alpha1))
425a426
> 			return;
427c428
< 		else if (Input.GetKeyDown(KeyCode.Keypad2))
---
> 		if (Input.GetKey(KeyCode.LeftControl) && Input.GetKeyDown(KeyCode.Alpha2))
430a432
> 			return;
432c434
< 		else if (Input.GetKeyDown(KeyCode.Keypad3))
---
> 		if (Input.GetKey(KeyCode.LeftControl) && Input.GetKeyDown(KeyCode.Alpha3))
435a438
> 			return;
437c440
< 		else if (Input.GetKeyDown(KeyCode.Keypad4))
---
> 		if (Input.GetKey(KeyCode.LeftControl) && Input.GetKeyDown(KeyCode.Alpha4))
440a444
> 			return;
442c446
< 		else if (Input.GetKeyDown(KeyCode.Keypad5))
---
> 		if (Input.GetKey(KeyCode.LeftControl) && Input.GetKeyDown(KeyCode.Alpha5))
445a450
> 			return;
447c452
< 		else if (Input.GetKeyDown(KeyCode.Keypad6))
---
> 		if (Input.GetKey(KeyCode.LeftControl) && Input.GetKeyDown(KeyCode.Alpha6))
Binary files bak/Assembly-CSharp/obj/Debug/Assembly-CSharp.csprojAssemblyReference.cache and gamesrc/Assembly-CSharp/obj/Debug/Assembly-CSharp.csprojAssemblyReference.cache differ
